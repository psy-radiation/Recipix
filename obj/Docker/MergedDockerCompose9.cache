name: dockercompose4152999981540830420
services:
  postgres:
    environment:
      POSTGRES_DB: recipixdb
      POSTGRES_PASSWORD: 1234qwer
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
        volume: {}
  recipix.server:
    build:
      context: D:\VSporjects\Recipix
      dockerfile: Recipix.Server/Dockerfile
    depends_on:
      postgres:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: recipixserver
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "7000"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "7001"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\NZXT\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\NZXT\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\NZXT\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\NZXT\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose4152999981540830420_default
volumes:
  postgres-data:
    name: dockercompose4152999981540830420_postgres-data